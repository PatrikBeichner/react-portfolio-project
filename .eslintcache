[{"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/index.js":"1","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/reportWebVitals.js":"2","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/App.js":"3","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/HeaderComponent.js":"4","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/HomeComponent.js":"5","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/MainComponent.js":"6","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/DirectoryComponent.js":"7","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/AboutComponent.js":"8","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/FooterComponent.js":"9","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/TourComponent.js":"10","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/RentalsComponent.js":"11","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/RentalInfoComponent.js":"12","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/TestComponent.js":"13","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/shared/tours.js":"14","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/shared/rentals.js":"15","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/JumbotronComponent.js":"16","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/BookingComponent.js":"17"},{"size":548,"mtime":1608741965000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608741965000,"results":"20","hashOfConfig":"19"},{"size":682,"mtime":1608741965000,"results":"21","hashOfConfig":"19"},{"size":4616,"mtime":1608741965000,"results":"22","hashOfConfig":"19"},{"size":3606,"mtime":1608747034000,"results":"23","hashOfConfig":"19"},{"size":2024,"mtime":1608749247000,"results":"24","hashOfConfig":"19"},{"size":1664,"mtime":1608741965000,"results":"25","hashOfConfig":"19"},{"size":3096,"mtime":1608741965000,"results":"26","hashOfConfig":"19"},{"size":2031,"mtime":1608741965000,"results":"27","hashOfConfig":"19"},{"size":7937,"mtime":1608744090000,"results":"28","hashOfConfig":"19"},{"size":4365,"mtime":1608741965000,"results":"29","hashOfConfig":"19"},{"size":1756,"mtime":1608741965000,"results":"30","hashOfConfig":"19"},{"size":3744,"mtime":1608741965000,"results":"31","hashOfConfig":"19"},{"size":1058,"mtime":1608741965000,"results":"32","hashOfConfig":"19"},{"size":2169,"mtime":1608741965000,"results":"33","hashOfConfig":"19"},{"size":4224,"mtime":1608741965000,"results":"34","hashOfConfig":"19"},{"size":11173,"mtime":1608746294000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hy9vah",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/index.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/reportWebVitals.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/App.js",["73","74"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/HeaderComponent.js",["75","76"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/HomeComponent.js",[],["77","78"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/MainComponent.js",["79"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/DirectoryComponent.js",["80","81","82","83","84","85","86"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/AboutComponent.js",["87","88","89","90","91"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/FooterComponent.js",["92"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/TourComponent.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { Component, useEffect } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Jumbo from \"./JumbotronComponent\";\nimport BookingForm from \"./BookingComponent\";\n// import { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\n\nfunction RenderTour({ tour }) {\n  return (\n    <div className=\"col m-1\">\n      <Card>\n        <div class=\"embed-responsive embed-responsive-16by9\">\n          <img alt=\"Card image cap\" class=\"card-img-top embed-responsive-item\" src={tour.image} />\n        </div>\n        {/* <CardImg top src={tour.image} alt={tour.name} className=\"embed-responsive embed-responsive-16by9\" /> */}\n        <CardBody>\n          <CardText className={tour.cname}>{tour.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\n// class BookingForm extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       tourName: this.props.tour.name,\n//       name: \"\",\n//       phoneNum: \"\",\n//       email: \"\",\n//       contactType: \"By Phone\",\n//       guests: \"\",\n//       touched: {\n//         name: false,\n//         phoneNum: false,\n//         email: false,\n//         guests: false,\n//       }\n//     };\n\n//     this.baseState = this.state ///>>>>>>>>> note this one.\n\n//     this.handleInputChange = this.handleInputChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n// //   validate(name, phoneNum, email, guests) {\n\n// //     const errors = {\n// //         name: '',\n// //         phoneNum: '',\n// //         email: '',\n// //         guests: ''\n// //     };\n\n// //     if (this.state.touched.name) {\n// //         if (name.length < 2) {\n// //             errors.name = 'name must be at least 2 characters.';\n// //         } else if (name.length > 25) {\n// //             errors.name = 'name must be 15 or less characters.';\n// //         }\n// //     }\n\n// //     const reg = /^\\d+$/;\n// //     if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n// //         errors.phoneNum = 'The phone number should contain only numbers.';\n// //     }\n\n// //     if (this.state.touched.email && !email.includes('@')) {\n// //         errors.email = 'Email should contain a @';\n// //     }\n// //     if (this.state.touched.lastName) {\n// //       if (lastName.length < 2) {\n// //           errors.lastName = 'Last name must be at least 2 characters.';\n// //       } else if (lastName.length > 15) {\n// //           errors.lastName = 'Last name must be 15 or less characters.';\n// //       }\n// //   }\n\n// //     return errors;\n// // }\n\n// // handleBlur = (field) => () => {\n// //     this.setState({\n// //         touched: {...this.state.touched, [field]: true}\n// //     });\n// // }\n\n//   handleInputChange(event) {\n//     const target = event.target;\n//     const name = target.name;\n//     const value = target.value;\n//     // const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n//     this.setState({\n//       [name]: value,\n//     });\n//   }\n\n//   handleSubmit(event) {\n//     console.log(\"Current state is: \" + JSON.stringify(this.state));\n//     alert(\"Current state is: \" + JSON.stringify(this.state));\n//     event.preventDefault();\n\n//   }\n\n//   resetForm = () => {\n//     this.setState(this.baseState)\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"row row-content\">\n//           <div className=\"col-md-10\">\n//             <h2 className={this.props.tour.cname}>book tour</h2>\n//             <hr />\n//           </div>\n//           <div className=\"col-md-10\">\n//             <Form onSubmit={this.handleSubmit}>\n//               <FormGroup row>\n//                 <Label htmlFor=\"name\" md={2}>\n//                   name\n//                 </Label>\n//                 <Col md={10}>\n//                   <Input\n//                     type=\"text\"\n//                     id=\"name\"\n//                     name=\"name\"\n//                     placeholder=\"name\"\n//                     value={this.state.name}\n//                     onChange={this.handleInputChange}\n//                   />\n//                 </Col>\n//               </FormGroup>\n//               <FormGroup row>\n//                 <Label htmlFor=\"phoneNum\" md={2}>\n//                   phone\n//                 </Label>\n//                 <Col md={10}>\n//                   <Input\n//                     type=\"tel\"\n//                     id=\"phoneNum\"\n//                     name=\"phoneNum\"\n//                     placeholder=\"phone number\"\n//                     value={this.state.phoneNum}\n//                     onChange={this.handleInputChange}\n//                   />\n//                 </Col>\n//               </FormGroup>\n//               <FormGroup row>\n//                 <Label htmlFor=\"email\" md={2}>\n//                   email\n//                 </Label>\n//                 <Col md={10}>\n//                   <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleInputChange} />\n//                 </Col>\n//               </FormGroup>\n//               <FormGroup row>\n//                 <Label htmlFor=\"contactType\" md={2}>\n//                   contact preference\n//                 </Label>\n//                 <Col md={10}>\n//                   <Input type=\"select\" name=\"contactType\" id=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\n//                     <option>by phone</option>\n//                     <option>by email</option>\n//                     <option>by text</option>\n//                   </Input>\n//                 </Col>\n//               </FormGroup>\n//               <FormGroup row>\n//                 <Label htmlFor=\"guests\" md={2}>\n//                   guests\n//                 </Label>\n//                 <Col md={10}>\n//                   <Input\n//                     type=\"number\"\n//                     min=\"1\"\n//                     max=\"12\"\n//                     id=\"guests\"\n//                     name=\"guests\"\n//                     rows=\"12\"\n//                     value={this.state.guests}\n//                     onChange={this.handleInputChange}></Input>\n//                 </Col>\n//               </FormGroup>\n//               <FormGroup row>\n//                 <Col md={{ size: 10, offset: 2 }}>\n//                   <Button type=\"submit\" color=\"dark\">\n//                     submit booking\n//                   </Button>\n//                 </Col>\n//               </FormGroup>\n//             </Form>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\nfunction TourInfo(props) {\n\n  useEffect(() => {\n    window.scrollTo(0, 250)\n  }, [])\n\n  if (props.tour) {\n    return (\n      <React.Fragment>\n        <Jumbo />\n        <div className=\"container mb-5\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Breadcrumb>\n                <BreadcrumbItem>\n                  <Link to=\"/tours\">tours</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem active>\n                  {props.tour.name} {props.tour.type}\n                </BreadcrumbItem>\n              </Breadcrumb>\n              <h2 className={props.tour.cname}>{props.tour.name}</h2>\n              <hr />\n            </div>\n          </div>\n          <div className=\"row\">\n            <RenderTour tour={props.tour} />\n\n            <div className=\"col-6\">\n              <BookingForm book={props.tour} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n  return <div />;\n}\n\nexport default TourInfo;\n","/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/RentalsComponent.js",["109","110","111","112","113","114","115","116","117","118","119","120"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/RentalInfoComponent.js",["121","122","123","124","125","126","127","128","129","130","131"],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/TestComponent.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/shared/tours.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/shared/rentals.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/JumbotronComponent.js",[],"/Users/patrickbeichner/Desktop/NucampFolder/react-portfolio-project/src/components/BookingComponent.js",["132","133"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  Label,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  Row,\n  FormFeedback\n} from \"reactstrap\";\n\n\n// function DateType({book}) {\n//     return (\n//     <FormGroup row>\n//         <Label htmlFor=\"date\" md={2}>\n//         date\n//         </Label>\n//         <Col md={10}>\n//         <Input\n//             type=\"date\"\n//             id=\"date\"\n//             name=\"date\"\n//             rows=\"12\"\n//             value={this.state.date}\n//             onChange={this.handleInputChange}></Input>\n//         </Col>\n//     </FormGroup>\n//     );\n// }\nclass BookingForm extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        bookName: this.props.book.name,\n        name: \"\",\n        phoneNum: \"\",\n        email: \"\",\n        contactType: \"By Phone\",\n        guests: \"\",\n        date: \"\",\n        dateIn: \"\",\n        dateOut: \"\",\n        touched: {\n          name: false,\n          phoneNum: false,\n          email: false,\n          guests: false,\n          date: false,\n          dateIn: false,\n          dateOut: false,\n        }\n      };\n  \n      this.baseState = this.state ///>>>>>>>>> note this one.\n  \n      this.handleInputChange = this.handleInputChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    validate(name, phoneNum, email, guests, date, dateIn, dateOut) {\n  \n      const errors = {\n          name: '',\n          phoneNum: '',\n          email: '',\n          guests: '',\n          date: '',\n          dateIn: '',\n          dateOut: '',\n      };\n  \n      if (this.state.touched.name) {\n          if (name.length < 2) {\n              errors.name = 'name must be at least 2 characters.';\n          } else if (name.length > 25) {\n              errors.name = 'name must be 15 or less characters.';\n          }\n      }\n  \n      const reg = /^\\d+$/;\n      if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n          errors.phoneNum = 'The phone number should contain only numbers.';\n      }\n  \n      if (this.state.touched.email && !email.includes('@')) {\n          errors.email = 'Email should contain an @';\n      }\n    //   if (this.state.touched.lastName) {\n    //     if (lastName.length < 2) {\n    //         errors.lastName = 'Last name must be at least 2 characters.';\n    //     } else if (lastName.length > 15) {\n    //         errors.lastName = 'Last name must be 15 or less characters.';\n    //     }\n    // }\n  \n      return errors;\n  }\n  \n  handleBlur = (field) => () => {\n      this.setState({\n          touched: {...this.state.touched, [field]: true}\n      });\n  }\n  \n    handleInputChange(event) {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n  \n      this.setState({\n        [name]: value,\n      });\n    }\n  \n   \n    handleSubmit(event) {\n      console.log(\"Current state is: \" + JSON.stringify(this.state));\n      alert(\"Current state is: \" + JSON.stringify(this.state));\n      event.preventDefault();\n      \n    }\n  \n    resetForm = () => {\n      this.setState(this.baseState)\n    }\n   \n    render() {\n      const errors = this.validate(this.state.name, this.state.phoneNum, this.state.email, this.state.guests, this.state.date, this.state.dateIn, this.state.dateOut);\n\n        const bookType = this.props.book.type;\n        const renderDate = (bookType) => {\n            if (bookType === 'tour') {\n                console.log(\"its a tour\")\n        } else {\n            console.log(\"it's a rental\")\n            // //   button = <LoginButton onClick={this.handleLoginClick} />;\n            };\n        }\n        // const bookType = this.props.book.type;\n        // let date;\n        // if (bookType === 'tour') {\n        //     console.log(\"its a tour\")\n        // //   button = <LogoutButton onClick={this.handleLogoutClick} />;\n        // } else {\n        //     console.log(\"it's a rental\")\n        // //   button = <LoginButton onClick={this.handleLoginClick} />;\n        // }\n\n        var curr = new Date();\n        curr.setDate(curr.getDate());\n        var date = curr.toISOString().substr(0,10);\n\n        var cur = new Date();\n        cur.setDate(cur.getDate() + 1);\n        var dateMax = cur.toISOString().substr(0,10);\n\n      return (\n        <React.Fragment>\n          <div className=\"row row-content\">\n            <div className=\"col-md-12\">\n              <h2 className={this.props.book.cname}>book {this.props.book.type}</h2>\n              <hr />\n            </div>\n            <div className=\"col-md-12\">\n              <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                  <Label htmlFor=\"name\" md={2}>\n                    name\n                  </Label>\n                  <Col md={10}>\n                    <Input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"name\"\n                      value={this.state.name}\n                      invalid={errors.name}\n                      onBlur={this.handleBlur(\"name\")}\n                      onChange={this.handleInputChange}\n                    />\n                    <FormFeedback>{errors.name}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label htmlFor=\"phoneNum\" md={2}>\n                    phone\n                  </Label>\n                  <Col md={10}>\n                    <Input\n                      type=\"tel\"\n                      id=\"phoneNum\"\n                      name=\"phoneNum\"\n                      placeholder=\"phone number\"\n                      value={this.state.phoneNum}\n                      invalid={errors.phoneNum}\n                      onBlur={this.handleBlur(\"phoneNum\")}\n                      onChange={this.handleInputChange}\n                    />\n                    <FormFeedback>{errors.phoneNum}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label htmlFor=\"email\" md={2}>\n                    email\n                  </Label>\n                  <Col md={10}>\n                    <Input \n                      type=\"email\" \n                      id=\"email\" \n                      name=\"email\" \n                      placeholder=\"email\" \n                      value={this.state.email}\n                      invalid={errors.email}\n                      onBlur={this.handleBlur(\"email\")}\n                      onChange={this.handleInputChange} \n                      />\n                      <FormFeedback>{errors.email}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label htmlFor=\"contactType\" md={2}>\n                    contact preference\n                  </Label>\n                  <Col md={10}>\n                    <Input type=\"select\" name=\"contactType\" id=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\n                      <option>by phone</option>\n                      <option>by email</option>\n                      <option>by text</option>\n                    </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label htmlFor=\"guests\" md={2}>\n                    guests\n                  </Label>\n                  <Col md={10}>\n                    <Input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"12\"\n                      id=\"guests\"\n                      name=\"guests\"\n                      rows=\"12\"\n                      value={this.state.guests}\n                      onChange={this.handleInputChange}></Input>\n                  </Col>\n                </FormGroup>\n                    {this.props.book.type === \"tour\" &&\n                        <Row className=\"form-group\" >\n                            <Label htmlFor=\"date\" className=\"col-md-2\">\n                                date\n                            </Label>\n                            <Col >\n                                <Input\n                                    type=\"date\"\n                                    id=\"date\"\n                                    name=\"date\"\n                                    min={date}\n                                    rows=\"12\"\n                                    value={this.state.date}\n                                    invalid={errors.date}\n                                    onBlur={this.handleBlur(\"date\")}\n                                    onChange={this.handleInputChange}\n                                    className=\"col-md-12\"\n                                >\n                                </Input>\n                            </Col>\n                        </Row>\n                    }\n                    {this.props.book.type === \"rental\" &&\n                        <React.Fragment>\n                            <Row className=\"form-group\" >\n                                <Label htmlFor=\"dateIn\" className=\"col-md-2\">\n                                    check-in\n                                </Label>\n                                <Col>\n                                    <Input\n                                        type=\"date\"\n                                        id=\"dateIn\"\n                                        name=\"dateIn\"\n                                        min={date}\n\n                                        value={this.state.dateIn}\n                                        onChange={this.handleInputChange}\n                                        className=\"col-md-12\"\n                                    >\n                                    </Input>\n                                </Col>\n                                </Row>\n                            <Row className=\"form-group\" >\n                                <Label htmlFor=\"dateOut\" className=\"col-md-2\">\n                                    check-out\n                                </Label>\n                                <Col>\n                                    <Input\n                                        type=\"date\"\n                                        id=\"dateOut\"\n                                        name=\"dateOut\"\n                                        rows=\"12\"\n                                        min={dateMax}\n\n                                        value={this.state.dateOut}\n                                        onChange={this.handleInputChange}\n                                        className=\"col-md-12\"\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    }\n                <FormGroup row>\n                  <Col md={{ size: 10, offset: 2 }}>\n                    <Button type=\"submit\" color=\"dark\">\n                      submit booking\n                    </Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default BookingForm;",{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":12},{"ruleId":"134","severity":1,"message":"138","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":2,"column":70,"nodeType":"136","messageId":"137","endLine":2,"endColumn":79},{"ruleId":"134","severity":1,"message":"140","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"134","severity":1,"message":"138","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"134","severity":1,"message":"145","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"146","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"147","line":2,"column":25,"nodeType":"136","messageId":"137","endLine":2,"endColumn":33},{"ruleId":"134","severity":1,"message":"148","line":2,"column":35,"nodeType":"136","messageId":"137","endLine":2,"endColumn":44},{"ruleId":"134","severity":1,"message":"149","line":2,"column":46,"nodeType":"136","messageId":"137","endLine":2,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":10,"column":18,"nodeType":"152","endLine":10,"endColumn":106},{"ruleId":"153","severity":1,"message":"154","line":16,"column":19,"nodeType":"152","endLine":16,"endColumn":76},{"ruleId":"134","severity":1,"message":"145","line":2,"column":38,"nodeType":"136","messageId":"137","endLine":2,"endColumn":42},{"ruleId":"134","severity":1,"message":"147","line":2,"column":44,"nodeType":"136","messageId":"137","endLine":2,"endColumn":52},{"ruleId":"134","severity":1,"message":"155","line":2,"column":54,"nodeType":"136","messageId":"137","endLine":2,"endColumn":64},{"ruleId":"156","severity":1,"message":"157","line":47,"column":15,"nodeType":"152","endLine":47,"endColumn":74},{"ruleId":"134","severity":1,"message":"158","line":56,"column":10,"nodeType":"136","messageId":"137","endLine":56,"endColumn":23},{"ruleId":"134","severity":1,"message":"140","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"146","line":4,"column":3,"nodeType":"136","messageId":"137","endLine":4,"endColumn":10},{"ruleId":"134","severity":1,"message":"148","line":7,"column":3,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"160","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":9},{"ruleId":"134","severity":1,"message":"161","line":11,"column":3,"nodeType":"136","messageId":"137","endLine":11,"endColumn":8},{"ruleId":"134","severity":1,"message":"162","line":12,"column":3,"nodeType":"136","messageId":"137","endLine":12,"endColumn":8},{"ruleId":"134","severity":1,"message":"163","line":13,"column":3,"nodeType":"136","messageId":"137","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"164","line":14,"column":3,"nodeType":"136","messageId":"137","endLine":14,"endColumn":12},{"ruleId":"134","severity":1,"message":"165","line":15,"column":3,"nodeType":"136","messageId":"137","endLine":15,"endColumn":7},{"ruleId":"134","severity":1,"message":"166","line":16,"column":3,"nodeType":"136","messageId":"137","endLine":16,"endColumn":12},{"ruleId":"134","severity":1,"message":"167","line":17,"column":3,"nodeType":"136","messageId":"137","endLine":17,"endColumn":8},{"ruleId":"134","severity":1,"message":"168","line":18,"column":3,"nodeType":"136","messageId":"137","endLine":18,"endColumn":6},{"ruleId":"134","severity":1,"message":"169","line":25,"column":7,"nodeType":"136","messageId":"137","endLine":25,"endColumn":16},{"ruleId":"134","severity":1,"message":"170","line":26,"column":7,"nodeType":"136","messageId":"137","endLine":26,"endColumn":16},{"ruleId":"134","severity":1,"message":"171","line":27,"column":7,"nodeType":"136","messageId":"137","endLine":27,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":34,"column":11,"nodeType":"152","endLine":34,"endColumn":99},{"ruleId":"134","severity":1,"message":"145","line":2,"column":38,"nodeType":"136","messageId":"137","endLine":2,"endColumn":42},{"ruleId":"134","severity":1,"message":"147","line":2,"column":44,"nodeType":"136","messageId":"137","endLine":2,"endColumn":52},{"ruleId":"134","severity":1,"message":"155","line":2,"column":54,"nodeType":"136","messageId":"137","endLine":2,"endColumn":64},{"ruleId":"134","severity":1,"message":"172","line":2,"column":66,"nodeType":"136","messageId":"137","endLine":2,"endColumn":71},{"ruleId":"134","severity":1,"message":"160","line":2,"column":110,"nodeType":"136","messageId":"137","endLine":2,"endColumn":116},{"ruleId":"134","severity":1,"message":"140","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":26,"column":25,"nodeType":"152","endLine":26,"endColumn":76},{"ruleId":"173","severity":1,"message":"174","line":26,"column":33,"nodeType":"175","messageId":"176","endLine":26,"endColumn":53},{"ruleId":"153","severity":1,"message":"154","line":26,"column":88,"nodeType":"152","endLine":26,"endColumn":139},{"ruleId":"173","severity":1,"message":"174","line":26,"column":96,"nodeType":"175","messageId":"176","endLine":26,"endColumn":116},{"ruleId":"134","severity":1,"message":"177","line":45,"column":21,"nodeType":"136","messageId":"137","endLine":45,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":73,"column":15,"nodeType":"152","endLine":73,"endColumn":94},{"ruleId":"134","severity":1,"message":"159","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"148","line":7,"column":3,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"160","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":9},{"ruleId":"134","severity":1,"message":"161","line":11,"column":3,"nodeType":"136","messageId":"137","endLine":11,"endColumn":8},{"ruleId":"134","severity":1,"message":"162","line":12,"column":3,"nodeType":"136","messageId":"137","endLine":12,"endColumn":8},{"ruleId":"134","severity":1,"message":"163","line":13,"column":3,"nodeType":"136","messageId":"137","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"164","line":14,"column":3,"nodeType":"136","messageId":"137","endLine":14,"endColumn":12},{"ruleId":"134","severity":1,"message":"165","line":15,"column":3,"nodeType":"136","messageId":"137","endLine":15,"endColumn":7},{"ruleId":"134","severity":1,"message":"166","line":16,"column":3,"nodeType":"136","messageId":"137","endLine":16,"endColumn":12},{"ruleId":"134","severity":1,"message":"167","line":17,"column":3,"nodeType":"136","messageId":"137","endLine":17,"endColumn":8},{"ruleId":"134","severity":1,"message":"168","line":18,"column":3,"nodeType":"136","messageId":"137","endLine":18,"endColumn":6},{"ruleId":"134","severity":1,"message":"178","line":133,"column":15,"nodeType":"136","messageId":"137","endLine":133,"endColumn":23},{"ruleId":"134","severity":1,"message":"179","line":134,"column":15,"nodeType":"136","messageId":"137","endLine":134,"endColumn":25},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Jumbotron' is defined but never used.","'styled' is defined but never used.","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'Card' is defined but never used.","'CardImg' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CardHeader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'RenderPartner' is defined but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'Label' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Col' is defined but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'isNumber' is assigned a value but never used.","'Media' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'setAnimating' is assigned a value but never used.","'bookType' is assigned a value but never used.","'renderDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]